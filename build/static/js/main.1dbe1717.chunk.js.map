{"version":3,"sources":["hw4.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","HW4","classes","UserGithub","props","state","username","githubtUrl","avatarUrl","id","location","follower","following","$","get","this","source","result","console","log","data","setState","name","html_url","avatar_url","className","src","login","href","React","Component","ReactDOM","render","document","getElementById","output","push","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"8PAKMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,cA0DCC,EAtDT,WACN,IAAMC,EAAUV,IACVW,EAFI,kDAGN,WAAYC,GAAQ,IAAD,8BACnB,cAAMA,IACDC,MAAQ,CACTC,SAAU,GACVC,WAAY,GACZC,UAAW,GACXC,GAAI,GACJC,SAAU,GACVC,SAAU,GACVC,UAAW,IATI,EAHb,qDAgBV,WAAqB,IAAD,OAChBC,IAAEC,IAAIC,KAAKX,MAAMY,QAAQ,SAACC,GACtBC,QAAQC,IAAIF,GACZ,IAAMG,EAAOH,EACTG,GACA,EAAKC,SAAS,CACVf,SAAUc,EAAKE,KACff,WAAYa,EAAKG,SACjBf,UAAWY,EAAKI,WAChBf,GAAIW,EAAKX,GACTE,SAAUS,EAAKT,SACfC,UAAWQ,EAAKR,iBA3BtB,oBAgCV,WACI,OACJ,sBAAKa,UAAWvB,EAAQP,MAAxB,UACI,qBAAK+B,IAAKX,KAAKV,MAAMG,YACrB,uCAAUO,KAAKV,MAAMC,YACrB,wCAAWS,KAAKV,MAAMsB,SACtB,qCAAQZ,KAAKV,MAAMI,MACnB,2CAAcM,KAAKV,MAAMM,YACzB,4CAAeI,KAAKV,MAAMO,aAC1B,mBAAGgB,KAAMb,KAAKV,MAAME,WAApB,yBAPJ,WAlCU,GAEesB,IAAMC,WA4CnCC,IAASC,OACL,cAAC7B,EAAD,CAAYa,OAAO,sCACnBiB,SAASC,eAAe,SAE5B,IAAIC,EAAO,GAEP,OADAA,EAAOC,KAAK,cAACjC,EAAD,KACLgC,GCpDIE,MAVf,WACE,OACE,qBAAKZ,UAAU,MAAf,SACI,8BACGxB,SCIIqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdR,IAASC,OACP,cAAC,IAAMe,WAAP,UACE,cAAC,EAAD,MAEFd,SAASC,eAAe,SAM1BI,M","file":"static/js/main.1dbe1717.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport $ from  'jquery'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    }\r\n}));\r\n\r\nconst HW4=()=>{\r\n    const classes = useStyles();\r\n    class UserGithub extends React.Component {\r\n        constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            githubtUrl: '',\r\n            avatarUrl: '',\r\n            id: '',\r\n            location: '',\r\n            follower: '',\r\n            following: '',\r\n        }\r\n    } \r\n\r\n    componentDidMount() {\r\n        $.get(this.props.source, (result) => {\r\n            console.log(result);\r\n            const data = result;\r\n            if (data) {\r\n                this.setState({\r\n                    username: data.name,\r\n                    githubtUrl: data.html_url,\r\n                    avatarUrl: data.avatar_url,\r\n                    id: data.id,\r\n                    follower: data.follower,\r\n                    following: data.following,\r\n                });\r\n            }\r\n        });\r\n    } \r\n    render() {\r\n        return (\r\n    <div className={classes.paper}>\r\n        <img src={this.state.avatarUrl} />\r\n        <h3>Name:{this.state.username}</h3>\r\n        <h3>Login:{this.state.login}</h3>\r\n        <h3>ID:{this.state.id}</h3>\r\n        <h3>follower:{this.state.follower}</h3>\r\n        <h3>following:{this.state.following}</h3>  \r\n        <a href={this.state.githubtUrl}>Github Link</a>.\r\n        </div>\r\n        );\r\n    }\r\n    }\r\nReactDOM.render(\r\n    <UserGithub source=\"https://api.github.com/users/cjwu\" />,\r\n    document.getElementById('root')\r\n);\r\nvar output=[];\r\n    output.push(<UserGithub/>)\r\n    return output\r\n}\r\n    export default HW4;\r\n","import './App.css';\nimport HW4 from './hw4'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <div>\n          {HW4()}\n        </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}